% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/call.R
\name{hx_articles}
\alias{hx_articles}
\alias{hx_tweets}
\alias{hx_network}
\title{Articles}
\usage{
hx_articles(q, sort_by = c("recent", "relevant"))

hx_tweets(ids)

hx_network(ids, nodes_limit = 1000, include_user_mentions = FALSE)
}
\arguments{
\item{q}{Keywords to search in Lucene query syntax is supported, e.g., \code{+title:Trump}. 
Available field names are \code{title}, \code{meta}, \code{content}, \code{canonical_url} and \code{date_published}. 
The field date_published is saved as text \code{yyyy-mm-ddThh:mm:ss}, you can use a termrangefilter on this field, 
e.g., the string \code{'pizzagate AND date_published:[2016-10-28 TO 2016-12-04]'} will query documents with any 
fields contain pizzagate and the date_published is between \code{2016-10-28} to \code{2016-12-04}.}

\item{sort_by}{Choices are \code{relevant} \code{recent}. Specify how to sort the result, by the most relevant or recent}

\item{ids}{A list or vector of article ids to query, see \code{\link{hx_articles}}.}

\item{nodes_limit}{Network size limit by number of nodes. Default 1000. 
When nodes of network exceeds this parameter, a k-core algorithm is used to remove 
the least degree nodes and the associated edges.}

\item{ids}{A list or vector of article ids to query, see \code{\link{hx_articles}}.}
}
\description{
Return fake news matching query.

Return tweets on specific fake articles.

Return fake news matching query.
}
\examples{
\dontrun{
articles <- hx_articles("pizzagate")
}

\dontrun{
articles <- hx_articles("pizzagate")
tweets <- hx_tweets(articles$id[1:5])
}

\dontrun{
articles <- hx_articles("pizzagate")
network <- hx_network(articles$id[1:5])
}

}
